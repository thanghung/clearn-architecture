name: CI Pipeline

on:
  push:
    branches:
      - main

env:
  BUILD_PROJECT: ./src/CleanArchitecture/CleanArchitecture.sln
  TEST_PROJECT: ./src/CleanArchitecture.Test/CleanArchitecture.Test.csproj
  DOCKER_IMAGE_NAME: clean-architecture

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: 🧾 Checkout code
      uses: actions/checkout@v3

    - name: 🛠 Setup .NET 8 SDK
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 8.0.x

    - name: 📦 Cache NuGet packages
      uses: actions/cache@v3
      with:
        path: ~/.nuget/packages
        key: ${{ runner.os }}-nuget-${{ hashFiles('**/*.csproj') }}
        restore-keys: |
          ${{ runner.os }}-nuget-

    - name: 📦 Restore dependencies
      run: dotnet restore ${{ env.BUILD_PROJECT }}

    - name: 🧱 Build solution
      run: dotnet build ${{ env.BUILD_PROJECT }} --no-restore --configuration Release

    - name: ✅ Run Unit Tests
      run: dotnet test ${{ env.TEST_PROJECT }} --no-build --configuration Release --verbosity normal

    - name: 🚀 Publish solution
      run: dotnet publish ${{ env.BUILD_PROJECT }} --no-build --configuration Release -o ./publish

    - name: 🐳 Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: 🔑 Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: 🏗️ Build and Push Docker image
      uses: docker/build-push-action@v5
      with:
        context: ./src
        file: ./src/Dockerfile
        push: true
        platforms: linux/amd64,linux/arm64
        tags: |
          ${{ secrets.DOCKER_USERNAME }}/${{ env.DOCKER_IMAGE_NAME }}:latest
          ${{ secrets.DOCKER_USERNAME }}/${{ env.DOCKER_IMAGE_NAME }}:${{ github.sha }}
      env:
        DOCKER_BUILDKIT: 1